### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

# PATH
export PATH=$HOME/bin:$PATH              # Home bin Path
export PATH=/usr/local/bin:$PATH         # User local Path
export PATH=$HOME/.local/bin:$PATH       # Home .local Path
export PATH=$HOME/scripts:$PATH          # Home custom scripts Path
export PATH=$HOME/.nimble/bin:$PATH      # Nimble (Nim Package Manager) Path
export PATH=/usr/local/go/bin:$PATH      # Go user Local Path
export PATH=$HOME/go/bin:$PATH           # Go local path
export PATH=$HOME/.emacs.d/bin:$PATH     # Emacs local path
export PATH=$HOME/.cargo/bin:$PATH       # Rust local path
{{- if eq .chezmoi.os "darwin" }}
export PATH=/opt/homebrew/bin/:$PATH     # Mac homebrew path
export PATH=/usr/local/bin/:$PATH        # Mac usr bin path
export PATH=/Applications/Visual\ Studio\ Code\ -\ Insiders.app/Contents/Resources/app/bin:$PATH        # Mac vscode
{{-  end}}

# Zsh settings
# History Settings
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory

# Env Variables
# lesspipe
LESSOPEN="|lesspipe.sh %s"; export LESSOPEN
lessc () {/usr/share/vim/vim90/macros/less.sh "$@"}

EDITOR="mnv"; export EDITOR 

# Theme
PURE_PROMPT_SYMBOL=
PURE_PROMPT_VICMD_SYMBOL=

zinit ice pick'async.zsh' src'pure.zsh'
zinit light sindresorhus/pure

zinit wait lucid light-mode for \
    andydecleyre/zpy \
    unixorn/fzf-zsh-plugin \
    Aloxaf/fzf-tab \
    is-snippet ~/.dot_zsh/.ls.zshrc \
    as'command' \
        atclone"
          ./fnm completions --shell zsh > _fnm.zsh" \
        atpull'%atclone' \
        blockf \
        from'gh-r' \
        nocompile \
        atload'eval "$(fnm env --use-on-cd)"' \
        sbin'fnm' \
      Schniz/fnm \
    as'command' \
        pick'bin/pyenv' \
        blockf \
        atload'eval "$(pyenv init - --no-rehash zsh)";' \
        src'completions/pyenv.zsh' nocompile'!' \
      pyenv/pyenv \
    OMZP::gitignore \
    OMZP::sudo \
    OMZP::aws \
    OMZP::colored-man-pages \
    OMZP::command-not-found \
    OMZP::copyfile \
    atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
        zdharma-continuum/fast-syntax-highlighting \
    blockf atpull"zinit creinstall -q ." \
        zsh-users/zsh-completions \
    atload"_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions \

source ~/neovim/modern-neovim/mnv.sh

# Aliases
alias v="mnv"
{{- if eq .chezmoi.os "darwin" }}
alias cat="bat"
{{- else if eq .chezmoi.os "linux" }}
alias cat="batcat"
{{-  end}}
alias ranger=". ranger"
alias gfc="fzf-git-checkout"
alias fzh='print -z -- $(cat ~/.zsh_history | fzf)'


# Env Vars
QT_QPA_PLATFORM=xcb

# Keybinds
bindkey "^[[H"      beginning-of-line
bindkey "^[[F"      end-of-line
bindkey "^[[1;5D"   vi-backward-blank-word
bindkey "^[[1;5C"   vi-forward-blank-word
bindkey "^[[3~"     kill-word

