### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

# PATH
export PATH=$HOME/bin:$PATH              # Home bin Path
export PATH=/usr/local/bin:$PATH         # User local Path
export PATH=$HOME/.local/bin:$PATH       # Home .local Path
export PATH=$HOME/scripts:$PATH          # Home custom scripts Path
export PATH=$HOME/.nimble/bin:$PATH      # Nimble (Nim Package Manager) Path
export PATH=/usr/local/go/bin:$PATH      # Go user Local Path
export PATH=$HOME/go/bin:$PATH           # Go local path
export PATH=$HOME/.emacs.d/bin:$PATH     # Emacs local path
export PATH=$HOME/.cargo/bin:$PATH       # Rust local path
{{- if eq .chezmoi.os "darwin" }}
export PATH=/opt/homebrew/bin/:$PATH     # Mac homebrew path
export PATH=/usr/local/bin/:$PATH        # Mac usr bin path
export PATH=/Applications/Visual\ Studio\ Code\ -\ Insiders.app/Contents/Resources/app/bin:$PATH        # Mac vscode
{{-  end}}
export PATH=$HOME/progs/:$PATH           # Misc Progs

# Zsh settings
# History Settings
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory

# Env Variables
# lesspipe
LESSOPEN="|lesspipe.sh %s"; export LESSOPEN
lessc () {/usr/share/vim/vim90/macros/less.sh "$@"}

EDITOR="nvim"; export EDITOR 

# Theme
PURE_PROMPT_SYMBOL=
PURE_PROMPT_VICMD_SYMBOL=

zinit ice pick'async.zsh' src'pure.zsh'
zinit light sindresorhus/pure

zinit lucid for \
    atinit"
      ZSH_TMUX_FIXTERM=false
      ZSH_TMUX_AUTOSTART=false
      ZSH_TMUX_AUTOCONNECT=false" \
  OMZP::tmux \
  atinit"HIST_STAMPS=dd.mm.yyyy" \
  OMZL::history.zsh \

zinit wait lucid for \
	OMZL::clipboard.zsh \
	OMZL::compfix.zsh \
	OMZL::completion.zsh \
	OMZL::correction.zsh \
    atload"
      alias ..='cd ..'
      alias ...='cd ../..'
      alias ....='cd ../../..'
      alias .....='cd ../../../..'" \
	OMZL::directories.zsh \
	OMZL::git.zsh \
	OMZL::grep.zsh \
	OMZL::key-bindings.zsh \
	OMZL::spectrum.zsh \
    atload"alias gcd='gco dev'" \
	OMZP::git \
	OMZP::fzf \
    atload"
      alias dcupb='docker-compose up --build'" \
	OMZP::docker-compose \
    as"completion" \
  OMZP::gitignore \
  OMZP::sudo \
  OMZP::aws \
  OMZP::colored-man-pages \
  OMZP::command-not-found \
  OMZP::copyfile \
  andydecleyre/zpy \
  hlissner/zsh-autopair \

zinit wait lucid for \
      light-mode atinit"ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20" atload"_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions \
      light-mode atinit"
        typeset -gA FAST_HIGHLIGHT; FAST_HIGHLIGHT[git-cmsg-len]=100;
        zpcompinit; zpcdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
      atpull'zinit creinstall -q .' \
      atinit"
        zstyle ':completion:*' completer _expand _complete _ignored _approximate
        zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
        zstyle ':completion:*' menu select=2
        zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
        zstyle ':completion:*:*:*:*:processes' command 'ps -u $USER -o pid,user,comm,cmd -w -w'
        zstyle ':completion:*:descriptions' format '-- %d --'
        zstyle ':completion:*:processes' command 'ps -au$USER'
        zstyle ':completion:complete:*:options' sort false
        zstyle ':fzf-tab:complete:_zlua:*' query-string input
        zstyle ':fzf-tab:complete:cd:*' extra-opts --preview=$extract'exa -1 --color=always ${~ctxt[hpre]}$in'
        zstyle ':fzf-tab:complete:kill:argument-rest' extra-opts --preview=$extract'ps --pid=$in[(w)1] -o cmd --no-headers -w -w' --preview-window=down:3:wrap" \
      blockf light-mode \
    zsh-users/zsh-completions \



zinit wait lucid for \
    is-snippet ~/.dot_zsh/.ls.zshrc \
    is-snippet ~/.dot_zsh/_kubectl.zsh \
    as'command' \
        pick'bin/pyenv' \
        blockf \
        atload'eval "$(pyenv init - --no-rehash zsh)";' \
        src'completions/pyenv.zsh' nocompile'!' \
      pyenv/pyenv \

# Aliases
{{- if eq .chezmoi.os "darwin" }}
alias cat="bat"
{{- else if eq .chezmoi.os "linux" }}
alias code="code-insiders"
alias cat="batcat"
{{- end }}
alias lg="lazygit"
alias v="nvim"
alias ranger=". ranger"
alias gfc="fzf-git-checkout"
alias fzh='print -z -- $(cat ~/.zsh_history | fzf)'

eval "$(direnv hook zsh)"

{{- if eq .chezmoi.os "darwin" }}
# pnpm
export PNPM_HOME="/Users/karim/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
{{- else if eq .chezmoi.os "linux" }}
# pnpm
export PNPM_HOME="/home/karim/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
{{- end}}

# bun completions
[ -s "/home/karim/.bun/_bun" ] && source "/home/karim/.bun/_bun"

{{- if eq .chezmoi.os "darwin" }}
bindkey "^[backword" backward-word
bindkey "^[forword" forward-word
bindkey "^[beginline" beginning-of-line
bindkey "^[endline" end-of-line
{{- end}}
# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
